The algorithm used in code you sent does not seem to converge. Even after 150 iterations the optimal policy is changing by around 1-2% at each iteration. I was also unable to get a clear idea of what you are doing as the code is quite involved. I was hoping to try some numerical experiments but the code does not seem easy to alter as many of the model features seem to be embedded in the various functions called.

From what I could gather it seems that you attach significance to values of the assessment that exceed a certain level. I do not understand this. You seem to assume that the stock level is bounded above but I see nothing in your model specification that leads to this result. If you need to obtain E[Stock|Assessment=A] this should equal A*E[1\zm] regardless of the level of A.

In case you are interested I am attaching the code I wrote to replicate your model. The code uses a toolbox I wrote for DP problems which is available at
https://sites.google.com/site/mdpsolve/
All of the alterable parameters are at the top of SethiEtAl05 so numerical experiments are relatively easy to conduct.

The way I solve the problem is to express next period's assessment as a function of the current assessment and quota:
  A' = S'zg = G(A/zm - min(A/zm,Q*zi))zg*zm'
  (where ' indicates the next period). The problem is then a standard dynamic programming problem which I solve by discretizing the assessment level, quota value and the three noise variables and solving the discretized problem.

  I experimented with both alternative growth rates and alternative growth functions and found that both make a big difference in the results obtained. In particular, it does not seem to be true that increasing the measurement uncertainty lowers the measurement level where the quota becomes positive. In fact, for low growth rates the optimal policy seems to be to keep the fishery closed unless the measured stock is greater then 60% of carrying capacity (I've included figures that display the results - these are produced with a higher grid resolution that in the code I sent).

  I also experimented with the (seemingly innocuous) change in the relationship between assessments and actual stocks. In your paper this is defined as A=S*e where e is a unit mean noise term. This, however, implies that E[S|A] is not equal to A, i.e, that A is a biased assessment of the stock level. If we define S=A*e with e unit mean then A is an unbiased assessment. At low noise levels this makes little difference but at the high noise level the bias is around 10%. This is turn produces a significant change in the optimal policy.

